library(boot)
?cv.glm()
?glm
?cv.glm()
?glm
?cv.glm()
parkinson.data=read.csv("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",header = T)
parkinson.data=read.xls("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",header = T)
require(xlsReadWrite)
parkinson.data=read.xls("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",header = T)
require(xlsReadWrite)
require(xlsReadWrite)
require(gdata)
require(gData)
require(xlsx)
parkinson.data=read.xls("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",header = T)
require(xls)
require(xlsx)
parkinson.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",header = T)
parkinson.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls")
parkinson.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls")
?read.xlsx
parkinson.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",sheetIndex = 1)
View(parkinson.data)
concrete.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",sheetIndex = 1)
View(parkinson.data)
View(concrete.data)
library("crossval")
library(crossval)
install.packages("crossval")
library("crossval", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(crossval)
?lda
library(MASS)
?lda()
attach(concrete.data)
library(boot)
library(MASS)
library(ISLR)
require(xlsx)
library(crossval)
install.packages("ISLR")
library("ISLR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
detach("package:ISLR", unload=TRUE)
library("ISLR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(ISLR)
corr(concrete.data)
cor(concrete.data)
head(concrete.data)
concrete.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",sheetIndex = 1)
View(concrete.data)
rm(list = ls())
concrete.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",sheetIndex = 1)
attach(concrete.data)
cor(concrete.data)
attach(concrete.data)
attach(concrete.data)
concrete.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",sheetIndex = 1)
attach(concrete.data)
rm(list = ls())
concrete.data=read.xlsx("/home/aditya/Desktop/Aditya/Semper/Assignment 5/Assign_5-Data/Concrete_Data.xls",sheetIndex = 1)
attach(concrete.data)
model=lm(Concrete.compressive.strength~.-Water-Superplasticizer)
model=lm(Concrete.compressive.strength~.-Water-Superplasticizer,data=concrete.data)
model=lm(Concrete.compressive.strength~.-Water-Superplasticizer+Water:Superplasticizer,data=concrete.data)
model
model=step(model,direction = "both")
source('~/Desktop/Aditya/Semper/Assignment 5/Rcode.R')
install.packages("DAAG")
library(DAAG)
?cv.lm()
cv.lm(data=concrete.data,model,m=5)
result=cv.lm(data=concrete.data,model,m=5)
?cv.lm
result=cv.lm(data=concrete.data,model,m=5)
result
result$Predicted
result$Concrete.compressive.strength
?CVlm
result=CVlm(data=concrete.data,model,m=5)
?CVlm
result$Predicted-result$Concrete.compressive.strength
result$cvpred
result$Predicted-result$Concrete.compressive.strength
result$Predicted-result$Concrete.compressive.strength
result$cvpred
result$cvpred
result$cvpred
length(result$cvpred)
result$Predicted-Concrete.compressive.strength
result$Concrete.compressive.strength-Concrete.compressive.strength
result$Predicted-Concrete.compressive.strength
power((result$cvpred-result$Concrete.compressive.strength),2)
power()
?pow
?pow()
?power()
sum((result$cvpred-result$Concrete.compressive.strength)^2)
(result$cvpred-result$Concrete.compressive.strength)
(result$cvpred-result$Concrete.compressive.strength)^2
sum((result$cvpred-result$Concrete.compressive.strength)^2)
sum((result$cvpred-result$Concrete.compressive.strength)^2)/length(result$Concrete.compressive.strength)
source('~/Desktop/Aditya/Semper/Assignment 5/Rcode.R')
result=CVlm(data=concrete.data,model,m=10)
sum((result$cvpred-result$Concrete.compressive.strength)^2)/length(result$Concrete.compressive.strength)
result=CVlm(data=concrete.data,model,m=1)
source('~/Desktop/Aditya/Semper/Assignment 5/Rcode.R')
result=CVlm(data=concrete.data,model,m=10)
